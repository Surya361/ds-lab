#include<stdio.h>
#include<stdlib.h>
#include<math.h>
void read(int **a,int n)
{
	int i,j;
	for(i=0;i<n;i++)
	for(j=0;j<n;j++)
	scanf("%d",(*(a+i)+j));
}
int readv(int **a,int **b,int n)
{
	int i,j,k;
	for(i=0;i<n;i++)
	for(j=0;j<n;j++)
	{
		scanf("%d",&k);
		if(k <= n && k > 0 && (*(*(a+i)+j) == k || *(*(a+i)+j) == 0))
		*(*(b+i)+j) = k;
		else
		{
			printf("no, solution inconsistent with sudoku, row-%d column-%d\n",i+1,j+1);
			return 0;
		}
	}
}
int fqcy(int *a,int n,int s)
{
	int i,j=0;
	for(i=0;i<n;i++)
	if(*(a+i) == s)
	j++;
	return j;
}
int fqcyt(int **a,int n)
{
	int i,k;
	for(i=0;i<n;i++)
	{
		for(k=1;k<=n;k++)
		{
			int j = fqcy(*(a+i),n,k);
			if(j <= 1)
			;
			else
			{
				printf("repeated %d in row %d",k,i+1);
				return 0;
			}
		}
	}
	return 1;
}
int checkclm(int **a,int n)
{
        int i,j,res = (n*(n+1))/2;
        for(i=0;i<n;i++)
        {
                int k =0;
                for(j=0;j<n;j++)
                {
                        k = k+(*(*(a+j)+i));
                }
                if (k == res)
                        ;
                else
                {
                        //errow(a,i);
			printf("error in column %d\n",i+1);
                        return 0;
                }
        }
        return 1;
}
int checkblk(int **a,int n)
{
	int i,j,k,l,res = (n*(n+1))/2;
	int in = sqrt(n);
	for(i=0;i<=n-in;i=i+in)
	{
		for(j=0;j<=n-in;j=j+in)
		{
			int m=0;
			for(k=0;k<in;k++)
			{
				for(l=0;l<in;l++)
				{
					m = m + *(*(a+i+k)+j+l);
					//printf("%d\n",*(*(a+i+k)+j+l));
				}
			}
			if (m == res)
                        ;
                	else
               		{
                        	//errow(a,i);
                        	//return 0;
				printf("error in %d%d block\n",i/in,j/in);
				return 0;
                	}

		}
	}
	return 1;
}

void main()
{
	printf("Input : ");
	int n,i;
	scanf("%d",&n);
	int **a;
	a = malloc(n*sizeof(int *));
	for(i=0;i<n;i++)
	*(a+i) = malloc(n*sizeof(int));
	int **b;
        b = malloc(n*sizeof(int *));
        for(i=0;i<n;i++)
        *(b+i) = malloc(n*sizeof(int));
	printf("Sudoku : \n");
	read(a,n);
	printf("Candidate solution : \n");
	if(readv(a,b,n) == 0)
	exit(1);
	//int g =checkrow(b,n);
	int f =checkclm(b,n);
	int h =checkblk(b,n);
	int q = fqcyt(b,n);
	if(f&&h&&q)
	printf("yes\n");
}
