#include<stdio.h>
#include<stdlib.h>

struct pque
{
	int data;
	int pri;
};
typedef struct pque prq;
//typedef prq *link;
int heapsize = -1;

int read(FILE *p)
{
	int n;
	fscanf(p,"%d",&n);
	return n;
}
int left(int i)
{
	return (2*(i+1)-1);
}
int right(int i)
{
	return (2*(i+1));
}
int parent(int i)
{
	return(((i+1)/2)-1);
}
prq * min_heapify(prq *a,int i)
{
	int smallest;
	int l = left(i);
	int r = right(i);
	if(r <= heapsize && ((a+r)->pri) < ((a+i)->pri))
		smallest = r;
	else
		smallest = i;
	if(l <= heapsize && ((a+l)->pri) < ((a+smallest)->pri))
		smallest = l;
	if(smallest != i)
	{
		prq *temp;
		temp = malloc(1*sizeof(prq));
		temp->data = (a+i)->data;
		temp->pri = (a+i)->pri;
		(a+i)->data = (a+smallest)->data;
		(a+i)->pri = (a+smallest)->pri;
		(a+smallest)->data = temp->data;
		(a+smallest)->pri = temp->pri;
		min_heapify(a,smallest);
	}
	return a;
}
void peek(prq *a)
{
	if(heapsize < 0)
	printf("EMPTY\n");
	else
	printf("%d(%d)\n",(a->data),(a->pri));
}
prq * removee(prq *pq)
{
	if (heapsize < 0)
	printf("EMPTY\n");
	else
	{
		printf("%d(%d)\n",(pq->data),(pq->pri));
		(pq) = (pq+heapsize);
		heapsize--;
		pq = min_heapify(pq,1);
	}
	return pq;
}
int search(prq *p,int dat)
{
	int i=0;
	while(i<=heapsize)
	{
		if (p->data == dat)
		return i;
		i++;
	}
	return -1;
}
prq * increase_pri(prq *pq,int dat,int pr)
{
	int i = search(pq,dat);
	if(i != -1)
	{
		(pq+i)->pri = pr;
		while(i>0 && ((pq+(parent(i))->pri) < (pq+i)->pri))
		{
			prq *temp;
			temp = (pq+i);
			pq+i = pq+parent(i);
			pq+parent(i) = temp;
			i = parent(i);
		}
	}
	printf("\n");
	return pq;	
}
prq * insert(prq *pq,int key,int da)
{
	heapsize = heapsize+1;
	(pq+heapsize)->data = da;
	(pq+heapsize)->pri = 1000000;
	pq = increase_pri(pq,da,key);
	printf("\n");
	return pq;
}
void do_it(FILE *p)
{
	prq *pq;
	pq = malloc(1000*sizeof(prq));
	int mode = read(p);
	while(mode != 0)
	{
		if(mode == 1)
		{
			int daat = read(p);
			int prrri = read(p);
			pq = insert(pq,prrri,daat);
		}
		if(mode ==2)
		pq = removee(pq);
		if(mode == 3)
		peek(pq);
		if(mode ==4)
		{
			int daat = read(p);
			int newp = read(p);
			pq = increase_pri(pq,daat,newp);
		}
		mode = read(p);
	}
}
void main()
{
	char *a;
	a = malloc(20*sizeof(char));
	printf("enter the input file name\n");
	scanf("%s",a);
	FILE *p;
	p = fopen(a,"r+");
	do_it(p);
}
